
Nikita Smirnov

5/4/2017 - Thursday (2 Periods)
- Make a plan for setting up Enigma I.

5/5/2017 - Friday (1 Period)
- Created interface called Rotor in order to require the Rotor classes to have their wiring and settings.
- RotorI, RotorII, RotorIII, RotorIV, RotorV classes created and implement Rotor interface.
- Added constructors to Rotors and the following methods:
	getTurnoverNotch(); getAlphabet(); getRotorWiring(); getConnection(String letter);

5/8/2017 - Monday (2 Periods)
- Added the alphabet and specific rotor wirings to each rotor.
- For classes RotorI - RotorV, getConnection(String letter) now works.
- Created class called Plugboard with methods:
	createPlugboard(); getAlphabet(); getPlugboard(); getPlugs(); getConnection();
- Created class called EnigmaI and started the constructor.

5/9/2017 - Tuesday (1 Period)
- Removed classes RotorII - RotorV and instead added a parameter that would create a rotor with specified wiring.

5/10/2017 - Wednesday (2 Periods)
- Created class called Reflector which represent reflectors UKW-A, UKW-B, UKW-C with methods:
	getAlphabet(); getReflectorWiring(); getConnection(String letter);
- Added ringSetting parameter to Rotor, as well as methods:
	getRingSetting(); setRingSetting(String letter); incrementRingSetting(); decrementRingSetting();
- Changed all char variable types to Strings to avoid confusion and later consequences.
- Started method encodeChar(String letter);
- Added method getPos(String letter) which returns the position of the letter in the alphabet to classes: 
	Rotor, Plugboard, and Reflector.
- Added method encodeLetter(String letter); to Rotor class, which converts the input letter to the letter at relative position 
of the rotor based on the ring setting, and then uses getConnection(String letter) to get the specific letter that's wired 
to the input letter.

5/11/2017 - Thursday (1 Period)
- Added Rotor stepping to encodeChar(); which uses the turnover notches to keep stepping each rotor.

5/12/2017 - Friday (2 Periods)
- Finished encodeChar();
- Debugging
	- String to arrayList and vice versa conversions. (Fixed)

5/15/2017 - Monday (1 Period)
- Debugging

5/16/2017 - Tuesday (2 Periods)
- Debugging
	- Bug in rotors with taking in the relative position of letters from previous inputs. (Fixed, but only forward encoding)
	- Right rotor doesn't need to take a relative position from the plugboard because the plugboard is already in order.

5/17/2017 - Wednesday (1 Period)
- Debugging
	- Reflector also needs to take in a relative position (Fixed)
	- (When encoding back) Left rotor doesn't need to take a relative postion from the reflector because the reflector is already in order.
	- Fixed relative position bug of letters from previous inputs when encoding back.
	- Relative position encoding back reflector
	
5/18/2017 - Thursday (2 Periods)
- Finished back-end completely. Engima now works with any settings without any errors or bugs.
	- Added methods encodeWord(); encodePhrase();
- Added print messages to engima constructor which prints all current settings neatly.
- Added print messages to all encoding methods to have a clean understanding of every single step of the encoding process.
- Enigma is now complete.
- Make a plan for setting up the GUI.

5/22/2017 - Monday (2 Periods)
- Removed RotorInterface, as there's no use for it.
- Make a plan and design the GUI.

5/23/2017 - Tuesday (1 Period)
- Create window and necessary classes for GUI.

5/24/2017 - Wednesday (2 Periods)
- Took my old code from a simple game I made earlier in order to save time from having to make new classes like
window, game, handler, keyinput, ID, and GameObject.
- Made a new class called GUI.
- GUI draws the layout of the rotors.


